// Copyright IBM Corp. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package tx.v1;

option go_package = "github.com/sykesm/batik/pkg/pb/tx/v1;txv1";

import "tx/v1/transaction.proto";

// EncodeTransactionAPI applies canonical transaction encoding and returns the
// encoded transaction and transaction ID.
service EncodeTransactionAPI {
  // EncodeTransaction encodes a transaction via deterministic marshal and returns
  // the encoded bytes as well as a hash over the transaction represented as a merkle
  // root and generated via SHA256 as the internal hashing function.
  rpc EncodeTransaction(EncodeTransactionRequest) returns (EncodeTransactionResponse);
};

// EncodeTransactionRequest contains a Transaction.
message EncodeTransactionRequest {
  Transaction transaction = 1;
}

// EncodeTransactionResponse contains the transaction ID and encoded bytes representing
// the transaction passed in the EncodeTransactionRequest.
message EncodeTransactionResponse {
  bytes txid = 1;
  bytes encoded_transaction = 2;
}
